meta {
    -theme-interface-style: dark;
    -theme-vibrancy: none;
    -theme-accent-color: false;
}


/*
 * Window styles
 */
meta.window {
    color: #b2b2b2; /*  base */
    background: #292b2e; /* bg1 */
    border-color: hsl(277, 6%, 28%);
}
meta.titlebar {
    color: hsl(277, 30%, 95%);
    background: linear-gradient(hsl(277, 25%, 55%), hsl(277, 25%, 45%));
    border-color: hsl(277, 10%, 60%);
}
meta.titlebar.inactive {
    background: hsl(277, 15%, 60%);
}

meta.button {
    background: linear-gradient(hsl(277, 25%, 50%), hsl(277, 25%, 40%));
    border: hsl(277, 20%, 51%);
    color: #b2b2b2;
}
meta.button.highlighted {
    background: linear-gradient(hsl(277, 25%, 60%), hsl(277, 25%, 50%));
    color: white;
}
meta.button.selected {
    background: linear-gradient(hsl(277, 35%, 50%), hsl(277, 35%, 40%));
    color: white;
}
meta.button.highlighted.selected {
    background: linear-gradient(hsl(277, 25%, 60%), hsl(277, 25%, 50%));
    color: white;
}
meta.button.disabled {
    background: hsl(277, 25%, 55%);
    color: #686868; /* base-dim */
}


meta.textfield {
    background: #292b2e;
    border-color: hsl(277, 30%, 50%);
}
meta.textfield.highlighted {
    background: #292b2e;
    border-color: hsl(277, 80%, 50%);
}
meta.accent {
    background: linear-gradient(hsl(277, 70%, 61%), hsl(277, 70%, 56%));
}

/*
 * Document styles
 */
meta.document {
    background: #292b2e; /*  bg1 */
    border-color: hsla(277, 15%, 25%, 0.5);
}

meta.textfield {
    background-color: #292b2e;
    border-color: hsl(277, 25%, 50%);
}
meta.textfield.highlighted {
    background-color: #292b2e;
    border-color: hsl(277, 50%, 50%);
}

/* Text */
meta.text {
    color: #b2b2b2; /*  base */
}
meta.text.invisible {
    color: #5d4d7a; /*  act2 */
}
meta.text.selected {
    background-color: hsl(216, 6%, 34%);
}

/* Highlight line color, only background */
meta.cursor {
    background-color: #212026; /*  bg2 */
}

/* Indentation Guides */
meta.indentguide {
    border-color: #3b314d; /*  highlight-dim */
}

/* Gutter */
meta.gutter {
    color: #44505c; /*  lnum */
}
meta.gutter.selected {
    background-color: #0a0814; /*  bg4 */
}


/*
 * Syntax styles
 */
comment {
    color: #847F85;
    font-style: italic;
}
processing {
    color: #86dc2f; /*  preprocessor / suc */
}
declaration {
    color: #9f8766; /*  meta */
}
bracket {
    color: #686868; /*  base-dim */
}
operator {
    color: #b2b2b2; /*  base */
}
invalid {
    color: #dc752f; /*  war */
    background-color: #3c2a2c; /*  red-bg */
}
link {
    color: #4f97d7; /* blue */
}

/* Keywords */
keyword {
    color: #4f97d7; /*  keyword */
    font-weight: bold;
}
keyword.construct {
    color: #bc6ec5; /*  func */
}
keyword.self {
    font-weight: normal;
}

/* Values */
value.entity,
value.null,
value.boolean,
value.symbol {
    color: #c56ec3; /*  comp */
}

/* Identifiers */
identifier.type {
    color: #ce537a; /*  type */
}
identifier.constant {
    color: #a45bad; /*  const */
}
identifier.variable {
    color: #7590db; /*  var */
}
identifier.method,
identifier.function {
    color: #bc6ec5; /*  func */
}
/* TODO have prefix colors? */
identifier.decorator,
identifier.property {
    color: #7590db; /*  var */
}

/* Strings */
string {
    color: #2d9574; /* str */
}
string.escape {
    color: #c56ec3; /* comp */
}
string.key {
    color: #9f8766; /* meta */
}
regex {
    color: #a31db1; /* magenta */
}
regex.escape {
    color: #4f97d7; /* blue */
}
cdata {
    color: #2d9574; /* str */
}

/* Markup */
markup.heading {
    color: #4f97d7; /* head1 */
}
markup.line {
    color: #67b11d; /* green */
}
markup.bold {
    font-weight: bold;
}
markup.italic {
    font-style: italic;
}
markup.strikethrough {
    color: #e0211d; /* err */
}
markup.list.item {
    color: #2d9574; /* head2 */
}
markup.code {
    color: #67b11d; /* head3 */
    background-color: #293235; /* head3-bg */
}
markup.link {
    color: #4f97d7; /* blue */
}

/* Types */
definition.class.name,
definition.type.name,
definition.package.name,
definition.enum.name,
definition.union.name,
definition.struct.name {
   font-weight: bold; 
}

/* Members */
definition.property.name {
}
definition.function.name,
definition.method.name {
    
}

/* Tags */
tag {
    color: #4f97d7; /* keyword */
}
/* tag.name,
tag.framework.name,
tag.attribute.name,
tag.framework.attribute.name {
    color: #e0211d; /* func
} */
tag.attribute.name {
    color: #86dc2f; /* suc */
}
tag.framework {
    color: #ce537a; /* type */
}
tag.attribute.value {
    color: #7590db; /* var */
}
tag.attribute.value.link {
    text-decoration: underline;
}

/* Styles */
style.at {
    color: #4f97d7; /* blue */
}
style.selector.element {
    /* color: #4f97d7; /* keyword */
    font-weight: bold;
}
/* covers *.pseudoelement, *.pseudoclass */
style.selector {
    color: #a45bad; /* const */
}
style.attribute.name {
    color: #4f97d7; /* keyword */
}
/* covers *.number, *.color.hex, *.color.named, *.keyword, *.identifier.function */
style.value{
    color: #7590db; /* var */
    font-weight: normal;
}
